// Automaticaly generated by rust_swig
package xyz.ecumene.jgilrs;

//Defines scheduling of the basic force feedback effect.
//____________            ____________            ____________
//|          |            |          |            |
//_______|          |____________|          |____________|
//after   play_for   with_delay   play_for   with_delay   play_for
public final class Replay {

    public Replay(long a0, long a1, long a2)  {

        mNativeObj = init(a0, a1, a2);
    }
    private static native long init(long a0, long a1, long a2) ;
    //@return duration in ticks (ms) after play is called
    public final Ticks getAfter()  {

        return do_getAfter(mNativeObj);
    }
    private static native Ticks do_getAfter(long me) ;
    //@return playback duration in ticks (ms)
    public final Ticks getPlayFor()  {

        return do_getPlayFor(mNativeObj);
    }
    private static native Ticks do_getPlayFor(long me) ;
    //@return the delay between ticks (ms)
    public final Ticks getWithDelay()  {

        return do_getWithDelay(mNativeObj);
    }
    private static native Ticks do_getWithDelay(long me) ;

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ long mNativeObj;
}